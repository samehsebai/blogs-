{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\react-starter\\\\front\\\\src\\\\pages\\\\quiz\\\\Quiz.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\"; //import \"./style.css\";\n\nimport questionAPI from './question';\nimport QuestionBox from '../../components/QuestionBox';\nimport Result from '../../components/ResultBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  class Quiz extends Component {\n    constructor() {\n      super();\n\n      this.getQuestions = () => {\n        questionAPI().then(question => {\n          this.setState({\n            questionBank: question\n          });\n        });\n      };\n\n      this.playAgain = () => {\n        this.getQuestions();\n        this.setState({\n          score: 0,\n          responses: 0\n        });\n      };\n\n      this.computeAnswer = (answer, correctAns) => {\n        if (answer === correctAns) {\n          this.setState({\n            score: this.state.score + 1\n          });\n        }\n\n        this.setState({\n          responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n        });\n      };\n\n      this.state = {\n        questionBank: [],\n        score: 0,\n        responses: 0\n      };\n    } // Function to get question from ./question\n\n\n    // componentDidMount function to get question\n    componentDidMount() {\n      this.getQuestions();\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"QuizOn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), this.state.questionBank.length > 0 && this.state.responses < 5 && this.state.questionBank.map(_ref => {\n          let {\n            question,\n            answers,\n            correct,\n            questionId\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(QuestionBox, {\n            question: question,\n            options: answers,\n            selected: answer => this.computeAnswer(answer, correct)\n          }, questionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this);\n        }), this.state.responses === 5 ? /*#__PURE__*/_jsxDEV(Result, {\n          score: this.state.score,\n          playAgain: this.playAgain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    }\n\n  }\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Quiz, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 17\n  }, this), document.getElementById(\"root\"));\n}\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/react-starter/front/src/pages/quiz/Quiz.jsx"],"names":["React","Component","ReactDOM","questionAPI","QuestionBox","Result","Quiz","constructor","getQuestions","then","question","setState","questionBank","playAgain","score","responses","computeAnswer","answer","correctAns","state","componentDidMount","render","length","map","answers","correct","questionId","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AACA,eAAe,SAASC,IAAT,GAAgB;AAE/B,QAAMA,IAAN,SAAmBL,SAAnB,CAA6B;AAC3BM,IAAAA,WAAW,GAAG;AACZ;;AADY,WAUdC,YAVc,GAUC,MAAM;AACnBL,QAAAA,WAAW,GAAGM,IAAd,CAAmBC,QAAQ,IAAI;AAC7B,eAAKC,QAAL,CAAc;AAACC,YAAAA,YAAY,EAAEF;AAAf,WAAd;AACD,SAFD;AAGD,OAda;;AAAA,WAiBdG,SAjBc,GAiBF,MAAM;AAChB,aAAKL,YAAL;AACA,aAAKG,QAAL,CAAc;AAACG,UAAAA,KAAK,EAAE,CAAR;AAAWC,UAAAA,SAAS,EAAE;AAAtB,SAAd;AACD,OApBa;;AAAA,WAuBdC,aAvBc,GAuBE,CAACC,MAAD,EAASC,UAAT,KAAwB;AACtC,YAAID,MAAM,KAAKC,UAAf,EAA2B;AACzB,eAAKP,QAAL,CAAc;AACZG,YAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,GAAmB;AADd,WAAd;AAGD;;AACD,aAAKH,QAAL,CAAc;AACZI,UAAAA,SAAS,EAAE,KAAKI,KAAL,CAAWJ,SAAX,GAAuB,CAAvB,GACP,KAAKI,KAAL,CAAWJ,SAAX,GAAuB,CADhB,GAEP;AAHQ,SAAd;AAKD,OAlCa;;AAEZ,WAAKI,KAAL,GAAa;AACXP,QAAAA,YAAY,EAAE,EADH;AAEXE,QAAAA,KAAK,EAAE,CAFI;AAGXC,QAAAA,SAAS,EAAE;AAHA,OAAb;AAKD,KAR0B,CAU3B;;;AA2BA;AACAK,IAAAA,iBAAiB,GAAG;AAClB,WAAKZ,YAAL;AACD;;AAEDa,IAAAA,MAAM,GAAG;AACP,0BAAQ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACN;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,EAKL,KAAKF,KAAL,CAAWP,YAAX,CAAwBU,MAAxB,GAAiC,CAAjC,IACA,KAAKH,KAAL,CAAWJ,SAAX,GAAuB,CADvB,IAEA,KAAKI,KAAL,CAAWP,YAAX,CAAwBW,GAAxB,CAA4B;AAAA,cAAC;AAACb,YAAAA,QAAD;AAAWc,YAAAA,OAAX;AAC7BC,YAAAA,OAD6B;AACpBC,YAAAA;AADoB,WAAD;AAAA,8BACH,QAAC,WAAD;AAAa,YAAA,QAAQ,EAC7ChB,QADwB;AACd,YAAA,OAAO,EAAEc,OADK;AAEzB,YAAA,QAAQ,EAAEP,MAAM,IAAI,KAAKD,aAAL,CAAmBC,MAAnB,EAA2BQ,OAA3B;AAFK,aACSC,UADT;AAAA;AAAA;AAAA;AAAA,kBADG;AAAA,SAA5B,CAPK,EAaJ,KAAKP,KAAL,CAAWJ,SAAX,KAAyB,CAAzB,gBACK,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWL,KAA1B;AACD,UAAA,SAAS,EAAE,KAAKD;AADf;AAAA;AAAA;AAAA;AAAA,gBADL,GAGI,IAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAoBD;;AA/D0B;;AAkE7BX,EAAAA,QAAQ,CAACmB,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAyBM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AAA2D;KApEnCtB,I","sourcesContent":["import React, {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import \"./style.css\";\r\nimport questionAPI from './question';\r\nimport QuestionBox from '../../components/QuestionBox';\r\nimport Result from '../../components/ResultBox';\r\nexport default function Quiz() {\r\n  \r\nclass Quiz extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questionBank: [],\r\n      score: 0,\r\n      responses: 0\r\n    };\r\n  }\r\n  \r\n  // Function to get question from ./question\r\n  getQuestions = () => {\r\n    questionAPI().then(question => {\r\n      this.setState({questionBank: question});\r\n    });\r\n  };\r\n  \r\n  // Set state back to default and call function\r\n  playAgain = () => {\r\n    this.getQuestions();\r\n    this.setState({score: 0, responses: 0});\r\n  };\r\n  \r\n  // Function to compute scores\r\n  computeAnswer = (answer, correctAns) => {\r\n    if (answer === correctAns) {\r\n      this.setState({\r\n        score: this.state.score + 1\r\n      });\r\n    }\r\n    this.setState({\r\n      responses: this.state.responses < 5\r\n        ? this.state.responses + 1\r\n        : 5\r\n    });\r\n  };\r\n  \r\n  // componentDidMount function to get question\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n  \r\n  render() {\r\n    return (<div className=\"container\">\r\n      <div className=\"title\">\r\n        QuizOn\r\n      </div>\r\n  \r\n      {this.state.questionBank.length > 0 && \r\n       this.state.responses < 5 && \r\n       this.state.questionBank.map(({question, answers,\r\n       correct, questionId}) => <QuestionBox question=\r\n       {question} options={answers} key={questionId}\r\n       selected={answer => this.computeAnswer(answer, correct)}/>)}\r\n  \r\n      {\r\n        this.state.responses === 5\r\n          ? (<Result score={this.state.score}\r\n            playAgain={this.playAgain}/>)\r\n          : null\r\n      }\r\n  \r\n    </div>)\r\n  }\r\n}\r\n  \r\nReactDOM.render(<Quiz/>, document.getElementById(\"root\"));}"]},"metadata":{},"sourceType":"module"}